{"version":3,"sources":["scripts/main.js"],"names":["cell11","document","getElementById","cell12","cell13","cell14","cell21","cell22","cell23","cell24","cell31","cell32","cell33","cell34","cell41","cell42","cell43","cell44","messageStart","querySelector","messageLose","messageWin","score","currentScore","textContent","board","buttons","button","classList","remove","add","addRandomCell","forEach","cell","randomCell","randomElement","randomIndex","Math","floor","random","length","randomNumber","randomNumb","randomEl","randomNum","arrowTracking","arrow","key","code","arrowUp","processElements","arrowRight","arrowDown","arrowLeft","direction","moved","i","currentIndex","parseInt","toString","checkingSituations","checkBoard","filter","hasAdjacentEqualValue","removeEventListener","index","neighbors","row","col","neighbor","neighborIndex","neighborValue","addEventListener"],"mappings":"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","file":"main.f0d7e823.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst cell11 = document.getElementById('1_1');\nconst cell12 = document.getElementById('1_2');\nconst cell13 = document.getElementById('1_3');\nconst cell14 = document.getElementById('1_4');\n\nconst cell21 = document.getElementById('2_1');\nconst cell22 = document.getElementById('2_2');\nconst cell23 = document.getElementById('2_3');\nconst cell24 = document.getElementById('2_4');\n\nconst cell31 = document.getElementById('3_1');\nconst cell32 = document.getElementById('3_2');\nconst cell33 = document.getElementById('3_3');\nconst cell34 = document.getElementById('3_4');\n\nconst cell41 = document.getElementById('4_1');\nconst cell42 = document.getElementById('4_2');\nconst cell43 = document.getElementById('4_3');\nconst cell44 = document.getElementById('4_4');\n\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\nconst score = document.querySelector('.game-score');\nlet currentScore = 0;\n\nscore.textContent = currentScore;\n\nconst board = [\n  cell11, cell12, cell13, cell14,\n  cell21, cell22, cell23, cell24,\n  cell31, cell32, cell33, cell34,\n  cell41, cell42, cell43, cell44,\n];\n\ndocument.querySelector('button').addEventListener('click', buttons);\ndocument.addEventListener('keydown', arrow => arrowTracking(arrow));\n\nfunction buttons() {\n  const button = document.querySelector('button');\n\n  if (button.textContent === 'Start') {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.textContent = 'restart';\n\n    messageStart.classList.add('hidden');\n\n    addRandomCell();\n    addRandomCell();\n  } else {\n    score.textContent = 0;\n\n    board.forEach(cell => {\n      cell.classList = ['field-cell'];\n      cell.textContent = '';\n    });\n\n    button.classList.remove('restart');\n    button.classList.add('start');\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n    button.textContent = 'Start';\n    messageStart.classList.remove('hidden');\n  }\n};\n\nfunction randomCell() {\n  let randomIndex = Math.floor(Math.random() * board.length);\n  let randomElement = board[randomIndex];\n\n  while (randomElement.classList.length >= 2) {\n    randomIndex = Math.floor(Math.random() * board.length);\n    randomElement = board[randomIndex];\n  };\n\n  return randomElement;\n};\n\nfunction randomNumber() {\n  const randomNumb = Math.floor(Math.random() * 100);\n\n  return randomNumb < 90 ? 2 : 4;\n};\n\nfunction addRandomCell() {\n  const randomEl = randomCell();\n  const randomNum = randomNumber();\n\n  randomEl.classList.add(`field-cell--${randomNum}`);\n  randomEl.textContent = randomNum;\n};\n\nfunction arrowTracking(arrow) {\n  const key = arrow.code;\n  const arrowUp = 'ArrowUp';\n  const arrowRight = 'ArrowRight';\n  const arrowDown = 'ArrowDown';\n  const arrowLeft = 'ArrowLeft';\n\n  switch (key) {\n    case arrowUp:\n      processElements('up');\n      break;\n    case arrowRight:\n      processElements('right');\n      break;\n    case arrowDown:\n      processElements('down');\n      break;\n    case arrowLeft:\n      processElements('left');\n      break;\n    default:\n      break;\n  }\n};\n\nfunction processElements(direction) {\n  let moved = false;\n\n  switch (direction) {\n    case 'up':\n      for (let i = 4; i <= 15; i++) {\n        if (board[i].classList.length > 1) {\n          let currentIndex = i;\n\n          while (\n            currentIndex >= 4\n            && board[currentIndex - 4].textContent === ''\n          ) {\n            currentIndex -= 4;\n          }\n\n          if (\n            currentIndex >= 4\n            && board[currentIndex - 4].textContent === board[i].textContent\n          ) {\n            board[currentIndex - 4].textContent *= 2;\n            board[currentIndex - 4].classList = [`field-cell field-cell--${board[currentIndex - 4].textContent}`];\n\n            board[i].classList = ['field-cell'];\n            board[i].textContent = '';\n\n            currentScore = parseInt(board[currentIndex - 4].textContent, 10);\n\n            score.textContent = (parseInt(score.textContent, 10)\n              + currentScore).toString();\n\n            moved = true;\n          } else if (currentIndex !== i) {\n            board[currentIndex].classList = [`field-cell field-cell--${board[i].textContent}`];\n            board[currentIndex].textContent = board[i].textContent;\n            board[i].classList = ['field-cell'];\n            board[i].textContent = '';\n\n            moved = true;\n          }\n        }\n      }\n      break;\n    case 'down':\n      for (let i = 11; i >= 0; i--) {\n        if (board[i].classList.length > 1) {\n          let currentIndex = i;\n\n          while (\n            currentIndex + 4 <= 15\n            && board[currentIndex + 4].textContent === ''\n          ) {\n            currentIndex += 4;\n          }\n\n          if (\n            currentIndex + 4 <= 15\n            && board[currentIndex + 4].textContent === board[i].textContent\n          ) {\n            board[currentIndex + 4].textContent *= 2;\n            board[currentIndex + 4].classList = [`field-cell field-cell--${board[currentIndex + 4].textContent}`];\n\n            board[i].classList = ['field-cell'];\n            board[i].textContent = '';\n\n            currentScore = parseInt(board[currentIndex + 4].textContent, 10);\n\n            score.textContent = (parseInt(score.textContent, 10)\n              + currentScore).toString();\n\n            moved = true;\n          } else if (currentIndex !== i) {\n            board[currentIndex].classList = [`field-cell field-cell--${board[i].textContent}`];\n            board[currentIndex].textContent = board[i].textContent;\n            board[i].classList = ['field-cell'];\n            board[i].textContent = '';\n\n            moved = true;\n          }\n        }\n      }\n      break;\n    case 'right':\n      for (let i = 14; i >= 0; i--) {\n        if (board[i].classList.length > 1) {\n          let currentIndex = i;\n\n          while (\n            currentIndex < 15\n            && currentIndex !== 3\n            && currentIndex !== 7\n            && currentIndex !== 11\n            && board[currentIndex + 1].textContent === ''\n          ) {\n            currentIndex++;\n          }\n\n          if (\n            currentIndex < 15\n            && currentIndex !== 3\n            && currentIndex !== 7\n            && currentIndex !== 11\n            && board[currentIndex + 1].textContent === board[i].textContent\n          ) {\n            board[currentIndex + 1].textContent *= 2;\n            board[currentIndex + 1].classList = [`field-cell field-cell--${board[currentIndex + 1].textContent}`];\n\n            board[i].classList = ['field-cell'];\n            board[i].textContent = '';\n\n            currentScore = parseInt(board[currentIndex + 1].textContent, 10);\n\n            score.textContent = (parseInt(score.textContent, 10)\n              + currentScore).toString();\n\n            moved = true;\n          } else if (currentIndex !== i) {\n            board[currentIndex].classList = [`field-cell field-cell--${board[i].textContent}`];\n            board[currentIndex].textContent = board[i].textContent;\n            board[i].classList = ['field-cell'];\n            board[i].textContent = '';\n\n            moved = true;\n          }\n        }\n      }\n      break;\n    case 'left':\n      for (let i = 1; i <= 15; i++) {\n        if (board[i].classList.length > 1) {\n          let currentIndex = i;\n\n          while (\n            currentIndex > 0\n            && currentIndex !== 4\n            && currentIndex !== 8\n            && currentIndex !== 12\n            && board[currentIndex - 1].textContent === ''\n          ) {\n            currentIndex--;\n          }\n\n          if (\n            currentIndex > 0\n            && currentIndex !== 4\n            && currentIndex !== 8\n            && currentIndex !== 12\n            && board[currentIndex - 1].textContent === board[i].textContent\n          ) {\n            board[currentIndex - 1].textContent *= 2;\n            board[currentIndex - 1].classList = [`field-cell field-cell--${board[currentIndex - 1].textContent}`];\n\n            board[i].classList = ['field-cell'];\n            board[i].textContent = '';\n\n            currentScore = parseInt(board[currentIndex - 1].textContent, 10);\n\n            score.textContent = (parseInt(score.textContent, 10)\n              + currentScore).toString();\n\n            moved = true;\n          } else if (currentIndex !== i) {\n            board[currentIndex].classList = [`field-cell field-cell--${board[i].textContent}`];\n            board[currentIndex].textContent = board[i].textContent;\n            board[i].classList = ['field-cell'];\n            board[i].textContent = '';\n\n            moved = true;\n          }\n        }\n      }\n      break;\n  }\n\n  if (moved) {\n    addRandomCell();\n    checkingSituations(moved);\n  }\n};\n\nfunction checkingSituations() {\n  const checkBoard = [...board];\n\n  checkBoard.forEach(cell => {\n    if (cell.textContent === '2048') {\n      messageWin.classList.remove('hidden');\n    }\n  });\n\n  const checkLoss = checkBoard.filter(cell => cell.classList.length > 1);\n\n  if (checkLoss.length === 16) {\n    if (!hasAdjacentEqualValue()) {\n      messageLose.classList.remove('hidden');\n      document.removeEventListener('keydown', arrow => arrowTracking(arrow));\n    }\n  }\n}\n\nfunction hasAdjacentEqualValue() {\n  for (let index = 0; index < board.length; index++) {\n    const row = Math.floor(index / 4);\n    const col = index % 4;\n\n    const neighbors = [\n      { row: row, col: col - 1 },\n      { row: row, col: col + 1 },\n      { row: row - 1, col: col },\n      { row: row + 1, col: col },\n    ];\n\n    for (const neighbor of neighbors) {\n      const neighborIndex = neighbor.row * 4 + neighbor.col;\n\n      if (\n        neighbor.row >= 0\n        && neighbor.row < 4\n        && neighbor.col >= 0\n        && neighbor.col < 4\n      ) {\n        const neighborValue = board[neighborIndex];\n\n        if (board[index].textContent === neighborValue.textContent) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n}\n"]}